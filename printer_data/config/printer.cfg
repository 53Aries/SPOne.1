[include mmu/base/*.cfg]
[include mmu/optional/client_macros.cfg]
[include mainsail.cfg]
[include Macros/*]
[include Settings/*]
[include HX.cfg]
#[include EBB36.cfg]
#[include RP2350.cfg]

#[include Trad_Rack/*.cfg]
#[include MKS_Robin_Nano.cfg]
#[include Bed_Settings.cfg]
#[include dockable_probe.cfg]
#[include sensorless_homing.cfg]
#[include blobifier.cfg]
#[include Klicky/*.cfg]
#[include PIS.cfg]

[exclude_object]

[skew_correction]

[virtual_sdcard]
path: /home/klipper/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

#[save_variables]
#filename: /home/klipper/printer_data/variables.cfg

[force_move]
enable_force_move: True

[gcode_arcs]
resolution: 0.4

[idle_timeout]
# only turn off heaters and motors if the printer is not paused
gcode:
    {% if not printer.pause_resume.is_paused %}
        TURN_OFF_HEATERS
        M84
    {% endif %}
timeout: 60000

[gcode_shell_command plot_graph]
command: bash /home/klipper/printer_data/config/scripts/plot_graphs.sh
timeout: 500.0
verbose: True


[printer]
kinematics: corexy
max_velocity: 300
max_accel: 10000
max_z_velocity: 10
max_z_accel: 250

[firmware_retraction]
retract_length: .4
unretract_extra_length: 0.0
retract_speed: 40
unretract_speed: 30



#[shaketune]
#result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
#number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
#keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
#show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
#timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
#measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
#max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
#dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.979
#*# pid_ki = 2.402
#*# pid_kd = 50.280
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 67
#*# shaper_type_y = zv
#*# shaper_freq_y = 44.2
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.812
#*# pid_ki = 0.950
#*# pid_kd = 1395.266
#*#
#*# [bed_mesh adaptive]
#*# version = 1
#*# points =
#*# 	-0.033125, -0.026875, -0.027500
#*# 	0.016875, 0.018125, 0.008125
#*# 	-0.005000, 0.005625, -0.003125
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 113.0
#*# max_x = 177.0
#*# min_y = 113.0
#*# max_y = 177.0
#*#
#*# [skew_correction CaliFlower]
#*# xy_skew = -0.0008011248089369351
#*# xz_skew = 0.0
#*# yz_skew = 0.0
#*#
#*# [load_cell]
#*# counts_per_gram = 76.94600
#*# reference_tare_counts = 1130166
#*#
#*# [axis_twist_compensation]
#*# zy_compensations = -0.001875, 0.011875, -0.010000
#*# compensation_start_y = 20.0
#*# compensation_end_y = 280.0
#*#
#*# [probe_eddy_ng btt_eddy]
#*# calibrated_drive_currents = 16, 17
#*# calibration_version = 5
#*# reg_drive_current = 16
#*# tap_drive_current = 17
#*# calibration_16 = gASVywMAAAAAAAB9lCiMAXaUSwWMBGZ0b2iUjBtudW1weS5wb2x5bm9taWFsLnBvbHlub21pYWyUjApQb2x5bm9taWFslJOUKYGUfZQojARjb2VmlIwWbnVtcHkuX2NvcmUubXVsdGlhcnJheZSMDF9yZWNvbnN0cnVjdJSTlIwFbnVtcHmUjAduZGFycmF5lJOUSwCFlEMBYpSHlFKUKEsBSwqFlGgMjAVkdHlwZZSTlIwCZjiUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYolDUCZla+3IqPU/bxoP/cVF/T9EDTWOVgvoPw/YBa/sEdk/pT2Pj7J20j+m1AlHsNfTP5ghP27hv3u/xjubZ+Hxyr8sPFZdxky7PxxbL/kx4sU/lHSUYowGZG9tYWlulGgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQIO19Go6rlD7oXpF2NgqVPpR0lGKMBndpbmRvd5RoC2gOSwCFlGgQh5RSlChLAUsChZRoGIlDEAAAAAAAAPC/AAAAAAAA8D+UdJRijAdfc3ltYm9slIwBeJSMBnN5bWJvbJRoLHVijAlmdG9oX2hpZ2iUaAUpgZR9lChoCGgLaA5LAIWUaBCHlFKUKEsBSwqFlGgYiUNQMUrnSvGJGED594ly59wBQGWeQdc/NO8/sywSUtHu5T+epW7KZzravzs/zDgf/O+/2WcLNZ8e8T++BUx96KD7P5+/62xXbuC/+k2U9uNb7L+UdJRiaB1oC2gOSwCFlGgQh5RSlChLAUsChZRoGIlDEDy2dNfuBpU+qCbP7kMYlT6UdJRiaCRoC2gOSwCFlGgQh5RSlChLAUsChZRoGIlDEAAAAAAAAPC/AAAAAAAA8D+UdJRiaCtoLGgtaCx1YowEaHRvZpRoBSmBlH2UKGgIaAtoDksAhZRoEIeUUpQoSwFLCoWUaBiJQ1CL7Q8IAPKUPvE/DKGPSyM+WRtZ8LksFb4izjo29lsEPnUVEXcsOt69MJBSuDh8870JgUju8nrWvUAq22MAuv49ZCQW4mka1T1/YlyW4u/wvZR0lGJoHWgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQoFcSkeSuWT8gdftgE/cTQJR0lGJoJGgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQAAAAAAAA8L8AAAAAAADwP5R0lGJoK2gsaC1oLHVijAdoX3JhbmdllF2UKEc/Wa7kkRJXoEdAI//RM9jsfWWMB2ZfcmFuZ2WUXZQoR0FIRXp2LFgAR0FIxSD0OCAAZYwCZGOUSxB1Lg==
#*# calibration_17 = gASVywMAAAAAAAB9lCiMAXaUSwWMBGZ0b2iUjBtudW1weS5wb2x5bm9taWFsLnBvbHlub21pYWyUjApQb2x5bm9taWFslJOUKYGUfZQojARjb2VmlIwWbnVtcHkuX2NvcmUubXVsdGlhcnJheZSMDF9yZWNvbnN0cnVjdJSTlIwFbnVtcHmUjAduZGFycmF5lJOUSwCFlEMBYpSHlFKUKEsBSwqFlGgMjAVkdHlwZZSTlIwCZjiUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYolDUAyQEi8NZvQ/nAfmdN1C/D+TKnUl6RvoP0QnIbbioNY/w/Xv5TmT1z8huJQVq6zgPyUFrFmj+cG/7Ue/voxP379bxXOby/HOP0HsUu5cG9Y/lHSUYowGZG9tYWlulGgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQbo+aFnWolD60kZ0/WSaVPpR0lGKMBndpbmRvd5RoC2gOSwCFlGgQh5RSlChLAUsChZRoGIlDEAAAAAAAAPC/AAAAAAAA8D+UdJRijAdfc3ltYm9slIwBeJSMBnN5bWJvbJRoLHVijAlmdG9oX2hpZ2iUaAUpgZR9lChoCGgLaA5LAIWUaBCHlFKUKEsBSwqFlGgYiUNQKdtpx5SGGEDaOrOgk5wBQI65mc/Dp+8/nm2/DIx38D93wudJhJnWvz+LA9OOawPA+bE9pj/T8T/W1+BvZkMPQCgevgWXfuO/ik1cPcM2/7+UdJRiaB1oC2gOSwCFlGgQh5RSlChLAUsChZRoGIlDEMrwdcCVIpU+6cFbeyA3lT6UdJRiaCRoC2gOSwCFlGgQh5RSlChLAUsChZRoGIlDEAAAAAAAAPC/AAAAAAAA8D+UdJRiaCtoLGgtaCx1YowEaHRvZpRoBSmBlH2UKGgIaAtoDksAhZRoEIeUUpQoSwFLCoWUaBiJQ1DC8WvWQwiVPhSl0jgpvyg+IZl1p1P1HL7hEZ0YRe4IPnIJvPr0C+i9C0E0ckd55D2d9L1sOnPmvfPCkDeSHuC9Jks6BxyQ3T2bSnHfIWe9PZR0lGJoHWgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQYJyIGOOYQj8AMgwmKPQTQJR0lGJoJGgLaA5LAIWUaBCHlFKUKEsBSwKFlGgYiUMQAAAAAAAA8L8AAAAAAADwP5R0lGJoK2gsaC1oLHVijAdoX3JhbmdllF2UKEc/QpjjGIicYEdAI//9OrbwKWWMB2ZfcmFuZ2WUXZQoR0FIIivXh+AAR0FIyNfRxhgAZYwCZGOUSxF1Lg==
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.539080, -0.518980, -0.543481, -0.561184, -0.592487, -0.607372, -0.594707, -0.601502, -0.599701, -0.575008, -0.564744, -0.575000, -0.545272
#*# 	  -0.389657, -0.404504, -0.422797, -0.421165, -0.464957, -0.477368, -0.464560, -0.459015, -0.459016, -0.432864, -0.410300, -0.420737, -0.401992
#*# 	  -0.270728, -0.276181, -0.307724, -0.310096, -0.345359, -0.354626, -0.328464, -0.328869, -0.326072, -0.286427, -0.269563, -0.281295, -0.256358
#*# 	  -0.176378, -0.192888, -0.210659, -0.220162, -0.248638, -0.251346, -0.232447, -0.227086, -0.218292, -0.188360, -0.169608, -0.178946, -0.178552
#*# 	  -0.131078, -0.137331, -0.159134, -0.168094, -0.193233, -0.195082, -0.173308, -0.162889, -0.153180, -0.119373, -0.096515, -0.105541, -0.078536
#*# 	  -0.080543, -0.087318, -0.115618, -0.116702, -0.145722, -0.152375, -0.131003, -0.102872, -0.098900, -0.057317, -0.040354, -0.041403, -0.038204
#*# 	  -0.081885, -0.076502, -0.095561, -0.100608, -0.130155, -0.133423, -0.112251, -0.095561, -0.079381, -0.038570, -0.012717, -0.010532, 0.012591
#*# 	  -0.074787, -0.085900, -0.105709, -0.110065, -0.131184, -0.142587, -0.122822, -0.107158, -0.098830, -0.059093, -0.024986, -0.017398, -0.024681
#*# 	  -0.125019, -0.112257, -0.134122, -0.140712, -0.162155, -0.163645, -0.145849, -0.130424, -0.115166, -0.068120, -0.041630, -0.026926, 0.000433
#*# 	  -0.145471, -0.160960, -0.186281, -0.183666, -0.207743, -0.209997, -0.192294, -0.170213, -0.161338, -0.115523, -0.079960, -0.069286, -0.070341
#*# 	  -0.228096, -0.222379, -0.243755, -0.243421, -0.271932, -0.274700, -0.239938, -0.229615, -0.215942, -0.169442, -0.132615, -0.118852, -0.093955
#*# 	  -0.299847, -0.315262, -0.337125, -0.347125, -0.369366, -0.381571, -0.351963, -0.343128, -0.324385, -0.272111, -0.234397, -0.216891, -0.228330
#*# 	  -0.486224, -0.455271, -0.482831, -0.491349, -0.515897, -0.524981, -0.499941, -0.479416, -0.459041, -0.399133, -0.360455, -0.352794, -0.327621
#*# x_count = 13
#*# y_count = 13
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 259.96
#*# min_y = 20.0
#*# max_y = 279.92
