[gcode_macro VALIDATE_MESH]
description: Spot‑check stored mesh at 4 corners + center; remesh only if out of tolerance (auto‑pull Eddy NG offsets)

gcode:
    #{# 1) Ensure we have a mesh #}
    {% set mesh     = printer.bed_mesh.mesh_matrix %}
    {% set mesh_min = printer.bed_mesh.mesh_min %}
    {% set mesh_max = printer.bed_mesh.mesh_max %}
    {% if mesh is none or mesh_min is none or mesh_max is none %}
      RESPOND MSG="⚠ No valid mesh found; run BED_MESH_CALIBRATE first."
    {% else %}
      #{# 2) Auto‑pull your Eddy NG probe offsets #}
      {% set eddy  = printer.configfile.config["probe_eddy_ng btt_eddy"] %}
      {% set offx  = eddy["x_offset"]|float %}
      {% set offy  = eddy["y_offset"]|float %}

      #{# 3) Other parameters #}
      {% set tol    = params.TOL|default(0.05)|float %}
      {% set n_rows = mesh|length %}
      {% set n_cols = mesh[0]|length %}
      {% set dx     = (mesh_max[0] - mesh_min[0])/(n_cols - 1) %}
      {% set dy     = (mesh_max[1] - mesh_min[1])/(n_rows - 1) %}
      {% set cols   = [0, n_cols-1, n_cols-1, 0, ((n_cols-1)/2)|round(0,'floor')|int] %}
      {% set rows   = [0, 0, n_rows-1, n_rows-1, ((n_rows-1)/2)|round(0,'floor')|int] %}
      {% set did_remesh = false %}

      #{# 4) Probe corners + center, compensating for Eddy offset #}
      {% for i in [0,1,2,3,4] %}
        {% if not did_remesh %}
          {% set c     = cols[i] %}
          {% set r     = rows[i] %}
          {% set x_nom = mesh_min[0] + dx * c %}
          {% set y_nom = mesh_min[1] + dy * r %}
          {% set x_mv  = x_nom - offx %}
          {% set y_mv  = y_nom - offy %}

          SAVE_GCODE_STATE NAME=mesh_check
          G90
          G1 X{ '%.3f' % x_mv } Y{ '%.3f' % y_mv } F6000
          PROBE
          RESTORE_GCODE_STATE NAME=mesh_check

          {% set z_probe = printer.probe.last_z_result %}
          {% set z_mesh  = mesh[r][c] %}
          {% set diff    = (z_probe - z_mesh)|abs %}

          {% if diff > tol %}
            RESPOND MSG="mesh fault"
            BED_MESH_CALIBRATE
            {% set did_remesh = true %}
          {% endif %}
        {% endif %}
      {% endfor %}

      #{# 5) Success if still within tolerance #}
      {% if not did_remesh %}
        RESPOND MSG="mesh ok"
      {% endif %}
    {% endif %}
